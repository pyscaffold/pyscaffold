# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# image: "python:2.7"

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

#variables:
#  POSTGRES_DB: database_name

# Cache packages in between builds
cache:
  paths:
    - vendor/python

# This is a basic example for a packages or script which doesn't use
# services such as redis or postgres
before_script:
  - python -v                                   # Print out Python version for debugging
  # Setup git
  - apt-get install git
  - git config --global user.email "you@example.com"
  - git config --global user.name "Your Name"
  # Install dependencies of your package and the testing environment
  - pip install -r requirements.txt
  - pip install -r test-requirements.txt

# Run in different environments
py27:
  image: "python:2.7"
  script:
  - python setup.py test

py33:
  image: "python:3.3"
  script:
  - python setup.py test

py34:
  image: "python:3.4"
  script:
  - python setup.py test

py35:
  image: "python:3.5"
  script:
  - python setup.py test

py36:
  image: "python:3.6"
  script:
  - python setup.py test

docs:
  before_script:
  - pip install Sphinx
  script:
  - python setup.py docs

# This deploy job uses a simple deploy flow to Heroku, other providers, e.g. AWS Elastic Beanstalk
# are supported too: https://github.com/travis-ci/dpl
#deploy:
#  type: deploy
#  environment: production
#  script:
#  - python setup.py
#  - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_PRODUCTION_KEY
