[metadata]
name = PyScaffold
description = Template tool for putting up the scaffold of a Python project
author = Florian Wilhelm
author-email = Florian.Wilhelm@gmail.com
license = MIT
url = https://github.com/pyscaffold/pyscaffold/
project-urls =
    Documentation = https://pyscaffold.org/
    Twitter = https://twitter.com/PyScaffold
    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
long-description = file: README.rst
long-description-content-type = text/x-rst; charset=UTF-8
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Topic :: Utilities
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: POSIX :: Linux
    Operating System :: Unix
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
include_package_data = True
package_dir =
    =src
setup_requires =
    setuptools_scm>=4.1.2,<5.0
    wheel>=0.34.2,<1.0
install_requires =
    appdirs>=1.4.4,<2.0
    configupdater>=1.0.1,<2.0
    setuptools_scm>=4.1.2,<5.0
    setuptools>=38.3

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, like:
all =
    pyscaffoldext-markdown
    pyscaffoldext-pyproject
    pyscaffoldext-custom-extension
    pyscaffoldext-dsproject
    pyscaffoldext-django
    pyscaffoldext-cookiecutter
md =
    pyscaffoldext-markdown
ds =
    pyscaffoldext-dsproject
# Add here test dependencies (used by tox)
testing =
    certifi     # tries to prevent certificate problems on windows
    tox         # system tests use tox inside tox
    pre-commit  # system tests run pre-commit
    sphinx      # system tests build docs
    flake8      # system tests run flake8
    pytest
    pytest-cov
    pytest-shutil
    pytest-virtualenv
    pytest-fixture-config
    pytest-xdist
    # We keep pytest-xdist in the test dependencies, so the developer can
    # easily opt-in for distributed tests by adding, for example, the `-n 15`
    # arguments in the command-line.

[options.entry_points]
distutils.setup_keywords =
    use_pyscaffold = pyscaffold.integration:pyscaffold_keyword
console_scripts =
    putup = pyscaffold.cli:run
pyscaffold.cli =
    config = pyscaffold.extensions.config:Config
    namespace = pyscaffold.extensions.namespace:Namespace
    no_skeleton = pyscaffold.extensions.no_skeleton:NoSkeleton
    pre_commit = pyscaffold.extensions.pre_commit:PreCommit
    tox = pyscaffold.extensions.tox:Tox
    travis = pyscaffold.extensions.travis:Travis
    gitlab = pyscaffold.extensions.gitlab_ci:GitLab
    cirrus = pyscaffold.extensions.cirrus:Cirrus

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junit-xml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov pyscaffold --cov-config .coveragerc --cov-report term-missing
    --verbose
#    In order to use xdist, the developer can add, for example, the following
#    arguments:
#    --dist=load --numprocesses=auto
norecursedirs =
    dist
    build
    .tox
testpaths = tests
markers =
    only: for debugging purposes, a single, failing, test can be required to run
    slow: mark tests as slow (deselect with '-m "not slow"')
    system: mark system tests
    original_logger: do not isolate logger in specific tests
log_level = DEBUG
log_cli = True
log_cli_level = CRITICAL
junit_family = xunit2

[aliases]
dists = sdist bdist_wheel

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats =
    sdist
    bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
# black compatibility
max-line-length = 88
# E203 and W503 have edge cases handled by black
extend-ignore = E203, W503
exclude =
    src/pyscaffold/contrib
    .tox
    build
    dist
    .eggs
    docs/conf.py

[mypy]
ignore_missing_imports = True
pretty = True
show_error_codes = True
show_error_context = True
show_traceback = True
